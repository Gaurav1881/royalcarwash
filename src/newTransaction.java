/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaurav
 */
public class newTransaction extends javax.swing.JFrame {

    private final String url = "jdbc:postgresql://localhost:5432/carwash_logs";
    private final String user = "username";
    private final String password = "password";
    /**
     * Creates new form newTransaction
     */
    public newTransaction() {
        initComponents();
        
        java.util.Date date = new java.util.Date();
        datePicker.setDate(date);
        
        Calendar cal = Calendar.getInstance();
        dateTo.setDate(cal.getTime());
        
        cal.add(Calendar.MONTH, -1);
        dateFrom.setDate(cal.getTime());
        
        Connection conn = null;

        
        try {
            // connect to server
            conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connected to the PostgreSQL server successfully.");

            // prepare statement
            String sql = "select * from transactions_table WHERE "
                    + " date >= '" + dateFrom.getDate() + "' "
                    + "and date <= '" + dateTo.getDate() + "' "
                    + "order by date desc";
            PreparedStatement statement = conn.prepareStatement(sql);

            // execute
            ResultSet data = statement.executeQuery();

             //To remove previously added rows
             
            int rows = 0;
            while(transactionsTable.getRowCount() > 0) 
            {
                ((DefaultTableModel) transactionsTable.getModel()).removeRow(0);
            }
            int columns = data.getMetaData().getColumnCount();
            while(data.next())
            {  
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {  
                    row[i - 1] = data.getObject(i);
                }
                ((DefaultTableModel) transactionsTable.getModel()).insertRow(data.getRow()-1,row);
                rows++;
            }

            results.setText("Results: " + rows);
            data.close();
            statement.close();
            conn.close();
            // TODO: MAKE THIS A BOX

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }                 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        washTypeGroup = new javax.swing.ButtonGroup();
        customerTypeGroup = new javax.swing.ButtonGroup();
        plateNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        phoneNumber = new javax.swing.JTextPane();
        add = new javax.swing.JButton();
        regular = new javax.swing.JRadioButton();
        policeCar = new javax.swing.JRadioButton();
        taxi = new javax.swing.JRadioButton();
        badgeNumber = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        otherBox = new javax.swing.JTextArea();
        phoneNumberLabel = new javax.swing.JLabel();
        phoneNumberLabel1 = new javax.swing.JLabel();
        phoneNumberLabel2 = new javax.swing.JLabel();
        phoneNumberLabel3 = new javax.swing.JLabel();
        regularWashRadio = new javax.swing.JRadioButton();
        superWashRadio = new javax.swing.JRadioButton();
        detailingRadio = new javax.swing.JRadioButton();
        phoneNumberLabel4 = new javax.swing.JLabel();
        phoneNumberLabel5 = new javax.swing.JLabel();
        datePicker = new com.toedter.calendar.JDateChooser();
        phoneNumberLabel6 = new javax.swing.JLabel();
        detailingRadio1 = new javax.swing.JRadioButton();
        detailingRadio2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        queryNumber = new javax.swing.JTextField();
        dateFrom = new com.toedter.calendar.JDateChooser();
        dateTo = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        transactionsTable = new javax.swing.JTable();
        queryButton = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        queryPlate = new javax.swing.JTextField();
        queryBadge = new javax.swing.JTextField();
        queryService = new javax.swing.JTextField();
        queryDetails = new javax.swing.JTextField();
        queryCustomer = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        results = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        plateNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        phoneNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        phoneNumber.setToolTipText("phone number");
        jScrollPane1.setViewportView(phoneNumber);

        add.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        customerTypeGroup.add(regular);
        regular.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        regular.setSelected(true);
        regular.setText("Customer");

        customerTypeGroup.add(policeCar);
        policeCar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        policeCar.setText("Police Car");

        customerTypeGroup.add(taxi);
        taxi.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        taxi.setText("Taxi");

        badgeNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        badgeNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                badgeNumberActionPerformed(evt);
            }
        });

        otherBox.setColumns(20);
        otherBox.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        otherBox.setRows(5);
        jScrollPane2.setViewportView(otherBox);

        phoneNumberLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel.setText("Phone number");

        phoneNumberLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel1.setText("Plate number");

        phoneNumberLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel2.setText("Badge Number");

        phoneNumberLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel3.setText("Wash Type");

        washTypeGroup.add(regularWashRadio);
        regularWashRadio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        regularWashRadio.setSelected(true);
        regularWashRadio.setText("Exterior Wash");
        regularWashRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regularWashRadioActionPerformed(evt);
            }
        });

        washTypeGroup.add(superWashRadio);
        superWashRadio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        superWashRadio.setText("Exterior Super Wash");
        superWashRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                superWashRadioActionPerformed(evt);
            }
        });

        washTypeGroup.add(detailingRadio);
        detailingRadio.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        detailingRadio.setText("Regular");
        detailingRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailingRadioActionPerformed(evt);
            }
        });

        phoneNumberLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel4.setText("Other Services");

        phoneNumberLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel5.setText("Customer Type");

        datePicker.setDateFormatString("yyyy-MM-dd");
        datePicker.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        phoneNumberLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        phoneNumberLabel6.setText("Date");

        washTypeGroup.add(detailingRadio1);
        detailingRadio1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        detailingRadio1.setText("Super Wash");
        detailingRadio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailingRadio1ActionPerformed(evt);
            }
        });

        washTypeGroup.add(detailingRadio2);
        detailingRadio2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        detailingRadio2.setText("Detailing");
        detailingRadio2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailingRadio2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Plate Number");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Badge Number");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Service Type");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Details");

        queryNumber.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        dateFrom.setDateFormatString("yyyy-MM-dd");

        dateTo.setDateFormatString("yyyy-MM-dd");

        transactionsTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        transactionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Phone Number", "Plate Number", "Badge Number", "Service Type", "Details", "Customer Type", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionsTable.setColumnSelectionAllowed(true);
        transactionsTable.setRowHeight(25);
        jScrollPane3.setViewportView(transactionsTable);

        queryButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        queryButton.setLabel("Query");
        queryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Phone Number");

        queryPlate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        queryBadge.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        queryService.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        queryDetails.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        queryCustomer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Customer Type");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel10.setText("Date From");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel11.setText("Date To");

        results.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        results.setText("Results: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(results)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(phoneNumberLabel)
                                        .addGap(156, 156, 156)
                                        .addComponent(phoneNumberLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(plateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(badgeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(phoneNumberLabel1)
                                        .addGap(169, 169, 169)
                                        .addComponent(phoneNumberLabel2)))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(phoneNumberLabel3)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(regularWashRadio)
                                                    .addComponent(detailingRadio1))
                                                .addGap(32, 32, 32)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(detailingRadio2)
                                                    .addComponent(superWashRadio))))
                                        .addGap(33, 33, 33)
                                        .addComponent(detailingRadio))
                                    .addComponent(phoneNumberLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(regular)
                                        .addGap(78, 78, 78)
                                        .addComponent(policeCar)
                                        .addGap(73, 73, 73)
                                        .addComponent(taxi)))
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(phoneNumberLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(queryNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(queryPlate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(queryBadge, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(queryService, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(queryDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(126, 126, 126)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(queryCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(184, 184, 184)
                                        .addComponent(jLabel11)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                                        .addComponent(queryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(69, 69, 69))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneNumberLabel)
                            .addComponent(phoneNumberLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(phoneNumberLabel3)
                            .addComponent(phoneNumberLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(regularWashRadio)
                                    .addComponent(superWashRadio)
                                    .addComponent(detailingRadio))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(detailingRadio1)
                                    .addComponent(detailingRadio2)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneNumberLabel1)
                            .addComponent(phoneNumberLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(badgeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(phoneNumberLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(regular)
                            .addComponent(policeCar)
                            .addComponent(taxi))))
                .addGap(32, 32, 32)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(queryBadge)
                        .addComponent(queryPlate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(queryService)
                        .addComponent(queryDetails)
                        .addComponent(queryCustomer))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(queryNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(queryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(results)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void badgeNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badgeNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_badgeNumberActionPerformed

    private void regularWashRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regularWashRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_regularWashRadioActionPerformed

    private void superWashRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_superWashRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_superWashRadioActionPerformed

    private void detailingRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailingRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailingRadioActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        connect();
                Connection conn = null;

        try {
            // connect to server
            conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connected to the PostgreSQL server successfully.");

            // prepare statement
            String sql = "select * from transactions_table where phone_number like '%" +  queryNumber.getText() +  "%' "
            + "and plate_number like '%" +  queryPlate.getText() +  "%' "
            + "and badge_number like '%" +  queryBadge.getText() +  "%' "
            + "and wash_type like '%" +  queryService.getText() +  "%' "
            + "and details like '%" +  queryDetails.getText() +  "%'"
            + "and customer_type like '%" +  queryCustomer.getText() +  "%'"
            + "and date >= '" + dateFrom.getDate() + "' "
            + "and date <= '" + dateTo.getDate() + "' "
            + "order by date desc";

            PreparedStatement statement = conn.prepareStatement(sql);

            // execute
            ResultSet data = statement.executeQuery();

            //To remove previously added rows
            while(transactionsTable.getRowCount() > 0)
            {
                ((DefaultTableModel) transactionsTable.getModel()).removeRow(0);
            }
            int columns = data.getMetaData().getColumnCount();
            while(data.next())
            {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {
                    row[i - 1] = data.getObject(i);
                }
                ((DefaultTableModel) transactionsTable.getModel()).insertRow(data.getRow()-1,row);
            }

            data.close();
            statement.close();
            conn.close();
            // TODO: MAKE THIS A BOX

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addActionPerformed

    private void detailingRadio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailingRadio1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailingRadio1ActionPerformed

    private void detailingRadio2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailingRadio2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detailingRadio2ActionPerformed

    private void queryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryButtonActionPerformed
        Connection conn = null;

        try {
            // connect to server
            conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connected to the PostgreSQL server successfully.");

            // prepare statement
            String sql = "select * from transactions_table where phone_number like '%" +  queryNumber.getText() +  "%' "
            + "and plate_number like '%" +  queryPlate.getText() +  "%' "
            + "and badge_number like '%" +  queryBadge.getText() +  "%' "
            + "and wash_type like '%" +  queryService.getText() +  "%' "
            + "and details like '%" +  queryDetails.getText() +  "%'"
            + "and customer_type like '%" +  queryCustomer.getText() +  "%'"
            + "and date >= '" + dateFrom.getDate() + "' "
            + "and date <= '" + dateTo.getDate() + "' "
            + "order by date desc";

            PreparedStatement statement = conn.prepareStatement(sql);

            // execute
            ResultSet data = statement.executeQuery();

            //To remove previously added rows
            int rows = 0;
            while(transactionsTable.getRowCount() > 0)
            {
                ((DefaultTableModel) transactionsTable.getModel()).removeRow(0);
            }
            int columns = data.getMetaData().getColumnCount();
            while(data.next())
            {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++)
                {
                    row[i - 1] = data.getObject(i);
                }
                ((DefaultTableModel) transactionsTable.getModel()).insertRow(data.getRow()-1,row);
                rows++;
            }

            results.setText("Results: " + rows);
            data.close();
            statement.close();
            conn.close();
            // TODO: MAKE THIS A BOX

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_queryButtonActionPerformed

    public Connection connect() {
        Connection conn = null;
       
        try {
            // connect to server
            conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connected to the PostgreSQL server successfully.");
            
            // prepare statement
            String sql = "Insert into transactions_table (phone_number,plate_number,badge_number,wash_type,details,customer_type,date) values (?,?,?,?,?,?,?)";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, phoneNumber.getText());
            statement.setString(2, plateNumber.getText());
            statement.setString(3, badgeNumber.getText());
            statement.setString(4, getSelectedButtonText(washTypeGroup));
            statement.setString(5, otherBox.getText());
            statement.setString(6, getSelectedButtonText(customerTypeGroup));
            statement.setDate(7, convertUtilToSql(datePicker.getDate()));
            // execute
            statement.execute();
            // TODO: MAKE THIS A BOX
            
            phoneNumber.setText("");
            plateNumber.setText("");
            badgeNumber.setText("");
            washTypeGroup.setSelected(regularWashRadio.getModel(), true);
            otherBox.setText("");
            customerTypeGroup.setSelected(regular.getModel(), true);
            
        } catch (SQLException e) {
            infoBox("data FAILED to save: \n" + e.getMessage(), "Failed");
            System.out.println(e.getMessage());
        }

        return conn;
    }
    
    private static java.sql.Date convertUtilToSql(java.util.Date uDate) {
        java.sql.Date sDate = new java.sql.Date(uDate.getTime());
        return sDate;
    }
    
     public static void infoBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null, infoMessage, titleBar, JOptionPane.INFORMATION_MESSAGE);
    }
     
    String getSelectedButtonText(ButtonGroup buttonGroup) {
    for (Enumeration buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
        AbstractButton button = (AbstractButton) buttons.nextElement();

        if (button.isSelected()) {
            return button.getText();
        }
    }

    return null;
    }   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(newTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(newTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(newTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(newTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newTransaction().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField badgeNumber;
    private javax.swing.ButtonGroup customerTypeGroup;
    private com.toedter.calendar.JDateChooser dateFrom;
    private com.toedter.calendar.JDateChooser datePicker;
    private com.toedter.calendar.JDateChooser dateTo;
    private javax.swing.JRadioButton detailingRadio;
    private javax.swing.JRadioButton detailingRadio1;
    private javax.swing.JRadioButton detailingRadio2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea otherBox;
    private javax.swing.JTextPane phoneNumber;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JLabel phoneNumberLabel1;
    private javax.swing.JLabel phoneNumberLabel2;
    private javax.swing.JLabel phoneNumberLabel3;
    private javax.swing.JLabel phoneNumberLabel4;
    private javax.swing.JLabel phoneNumberLabel5;
    private javax.swing.JLabel phoneNumberLabel6;
    private javax.swing.JTextField plateNumber;
    private javax.swing.JRadioButton policeCar;
    private javax.swing.JTextField queryBadge;
    private java.awt.Button queryButton;
    private javax.swing.JTextField queryCustomer;
    private javax.swing.JTextField queryDetails;
    private javax.swing.JTextField queryNumber;
    private javax.swing.JTextField queryPlate;
    private javax.swing.JTextField queryService;
    private javax.swing.JRadioButton regular;
    private javax.swing.JRadioButton regularWashRadio;
    private javax.swing.JLabel results;
    private javax.swing.JRadioButton superWashRadio;
    private javax.swing.JRadioButton taxi;
    private javax.swing.JTable transactionsTable;
    private javax.swing.ButtonGroup washTypeGroup;
    // End of variables declaration//GEN-END:variables
}
